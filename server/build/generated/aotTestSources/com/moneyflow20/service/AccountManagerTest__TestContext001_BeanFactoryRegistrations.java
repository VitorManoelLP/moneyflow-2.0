package com.moneyflow20.service;

import com.moneyflow20.Application__TestContext001_BeanDefinitions;
import com.moneyflow20.config.AuthenticationConfiguration__TestContext001_BeanDefinitions;
import com.moneyflow20.config.KeyResolver__TestContext001_BeanDefinitions;
import com.moneyflow20.controller.AuthenticationResource__TestContext001_BeanDefinitions;
import com.moneyflow20.repository.AccountRepository__TestContext001_BeanDefinitions;
import org.springframework.amqp.rabbit.annotation.RabbitListenerAnnotationBeanPostProcessor__TestContext001_BeanDefinitions;
import org.springframework.amqp.rabbit.listener.RabbitListenerEndpointRegistry__TestContext001_BeanDefinitions;
import org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator__TestContext001_BeanDefinitions;
import org.springframework.aot.generate.Generated;
import org.springframework.beans.factory.support.DefaultListableBeanFactory;
import org.springframework.boot.actuate.autoconfigure.amqp.RabbitHealthContributorAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.amqp.RabbitMetricsAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.AutoConfigurationPackages__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.amqp.RabbitAnnotationDrivenConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.amqp.RabbitProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.aop.AopAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.context.LifecycleProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.flyway.FlywayProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.gson.GsonProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.info.ProjectInfoProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jackson.JacksonProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.JdbcProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.JpaProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.security.SecurityProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.ssl.SslProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutionProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.ServerProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.WebProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.MultipartProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.context.properties.BoundConfigurationProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBinder__TestContext001_BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor__TestContext001_BeanDefinitions;
import org.springframework.boot.jackson.JsonMixinModuleEntries__TestContext001_BeanDefinitions;
import org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer__TestContext001_BeanDefinitions;
import org.springframework.boot.test.mock.mockito.MockitoPostProcessor__TestContext001_BeanDefinitions;
import org.springframework.boot.testcontainers.properties.TestcontainersPropertySourceAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.testcontainers.service.connection.ServiceConnectionAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter__TestContext001_BeanDefinitions;
import org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor__TestContext001_BeanDefinitions;
import org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor__TestContext001_BeanDefinitions;
import org.springframework.context.event.DefaultEventListenerFactory__TestContext001_BeanDefinitions;
import org.springframework.context.event.EventListenerMethodProcessor__TestContext001_BeanDefinitions;
import org.springframework.data.jpa.mapping.JpaMetamodelMappingContext__TestContext001_BeanDefinitions;
import org.springframework.data.jpa.repository.support.DefaultJpaContext__TestContext001_BeanDefinitions;
import org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor__TestContext001_BeanDefinitions;
import org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension__TestContext001_BeanDefinitions;
import org.springframework.data.jpa.util.JpaMetamodelCacheCleanup__TestContext001_BeanDefinitions;
import org.springframework.data.repository.core.support.PropertiesBasedNamedQueries__TestContext001_BeanDefinitions;
import org.springframework.data.repository.core.support.RepositoryComposition__TestContext001_BeanDefinitions;
import org.springframework.data.web.config.ProjectingArgumentResolverRegistrar__TestContext001_BeanDefinitions;
import org.springframework.data.web.config.SpringDataJacksonConfiguration__TestContext001_BeanDefinitions;
import org.springframework.data.web.config.SpringDataWebConfiguration__TestContext001_BeanDefinitions;
import org.springframework.orm.jpa.SharedEntityManagerCreator__TestContext001_BeanDefinitions;
import org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration__TestContext001_BeanDefinitions;
import org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration__TestContext001_BeanDefinitions;
import org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration__TestContext001_BeanDefinitions;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration__TestContext001_BeanDefinitions;
import org.springframework.security.web.access.HandlerMappingIntrospectorRequestTransformer__TestContext001_BeanDefinitions;
import org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration__TestContext001_BeanDefinitions;
import org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration__TestContext001_BeanDefinitions;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport__TestContext001_BeanDefinitions;

/**
 * Register bean definitions for the bean factory.
 */
@Generated
public class AccountManagerTest__TestContext001_BeanFactoryRegistrations {
  /**
   * Register the bean definitions.
   */
  public void registerBeanDefinitions(DefaultListableBeanFactory beanFactory) {
    beanFactory.registerBeanDefinition("org.springframework.boot.test.mock.mockito.MockitoPostProcessor$SpyPostProcessor", MockitoPostProcessor__TestContext001_BeanDefinitions.SpyPostProcessor.getSpyPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.test.mock.mockito.MockitoPostProcessor", MockitoPostProcessor__TestContext001_BeanDefinitions.getMockitoPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerProcessor", EventListenerMethodProcessor__TestContext001_BeanDefinitions.getInternalEventListenerProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerFactory", DefaultEventListenerFactory__TestContext001_BeanDefinitions.getInternalEventListenerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("application", Application__TestContext001_BeanDefinitions.getApplicationBeanDefinition());
    beanFactory.registerBeanDefinition("authenticationConfiguration", AuthenticationConfiguration__TestContext001_BeanDefinitions.getAuthenticationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("keyResolver", KeyResolver__TestContext001_BeanDefinitions.getKeyResolverBeanDefinition());
    beanFactory.registerBeanDefinition("authenticationResource", AuthenticationResource__TestContext001_BeanDefinitions.getAuthenticationResourceBeanDefinition());
    beanFactory.registerBeanDefinition("accountManager", AccountManager__TestContext001_BeanDefinitions.getAccountManagerBeanDefinition());
    beanFactory.registerBeanDefinition("configure", AuthenticationConfiguration__TestContext001_BeanDefinitions.getConfigureBeanDefinition());
    beanFactory.registerBeanDefinition("password", AuthenticationConfiguration__TestContext001_BeanDefinitions.getPasswordBeanDefinition());
    beanFactory.registerBeanDefinition("corsConfigurationSource", AuthenticationConfiguration__TestContext001_BeanDefinitions.getCorsConfigurationSourceBeanDefinition());
    beanFactory.registerBeanDefinition("authenticationManager", AuthenticationConfiguration__TestContext001_BeanDefinitions.getAuthenticationManagerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.AutoConfigurationPackages", AutoConfigurationPackages__TestContext001_BeanDefinitions.BasePackages.getAutoConfigurationPackagesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration", PropertyPlaceholderAutoConfiguration__TestContext001_BeanDefinitions.getPropertyPlaceholderAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("propertySourcesPlaceholderConfigurer", PropertyPlaceholderAutoConfiguration__TestContext001_BeanDefinitions.getPropertySourcesPlaceholderConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration", SslAutoConfiguration__TestContext001_BeanDefinitions.getSslAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("fileWatcher", SslAutoConfiguration__TestContext001_BeanDefinitions.getFileWatcherBeanDefinition());
    beanFactory.registerBeanDefinition("sslPropertiesSslBundleRegistrar", SslAutoConfiguration__TestContext001_BeanDefinitions.getSslPropertiesSslBundleRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("sslBundleRegistry", SslAutoConfiguration__TestContext001_BeanDefinitions.getSslBundleRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor", ConfigurationPropertiesBindingPostProcessor__TestContext001_BeanDefinitions.getConfigurationPropertiesBindingPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.internalConfigurationPropertiesBinder", ConfigurationPropertiesBinder__TestContext001_BeanDefinitions.ConfigurationPropertiesBinderFactory.getInternalConfigurationPropertiesBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.BoundConfigurationProperties", BoundConfigurationProperties__TestContext001_BeanDefinitions.getBoundConfigurationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter", MethodValidationExcludeFilter__TestContext001_BeanDefinitions.getMethodValidationExcludeFilterBeanDefinition());
    beanFactory.registerBeanDefinition("spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties", SslProperties__TestContext001_BeanDefinitions.getSslPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration", WebSocketServletAutoConfiguration__TestContext001_BeanDefinitions.TomcatWebSocketConfiguration.getTomcatWebSocketConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("websocketServletWebServerCustomizer", WebSocketServletAutoConfiguration__TestContext001_BeanDefinitions.TomcatWebSocketConfiguration.getWebsocketServletWebServerCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration", WebSocketServletAutoConfiguration__TestContext001_BeanDefinitions.getWebSocketServletAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat", ServletWebServerFactoryConfiguration__TestContext001_BeanDefinitions.EmbeddedTomcat.getEmbeddedTomcatBeanDefinition());
    beanFactory.registerBeanDefinition("tomcatServletWebServerFactory", ServletWebServerFactoryConfiguration__TestContext001_BeanDefinitions.EmbeddedTomcat.getTomcatServletWebServerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration", ServletWebServerFactoryAutoConfiguration__TestContext001_BeanDefinitions.getServletWebServerFactoryAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("servletWebServerFactoryCustomizer", ServletWebServerFactoryAutoConfiguration__TestContext001_BeanDefinitions.getServletWebServerFactoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("tomcatServletWebServerFactoryCustomizer", ServletWebServerFactoryAutoConfiguration__TestContext001_BeanDefinitions.getTomcatServletWebServerFactoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("server-org.springframework.boot.autoconfigure.web.ServerProperties", ServerProperties__TestContext001_BeanDefinitions.getServerPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("webServerFactoryCustomizerBeanPostProcessor", WebServerFactoryCustomizerBeanPostProcessor__TestContext001_BeanDefinitions.getWebServerFactoryCustomizerBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("errorPageRegistrarBeanPostProcessor", ErrorPageRegistrarBeanPostProcessor__TestContext001_BeanDefinitions.getErrorPageRegistrarBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration", DispatcherServletAutoConfiguration__TestContext001_BeanDefinitions.DispatcherServletConfiguration.getDispatcherServletConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dispatcherServlet", DispatcherServletAutoConfiguration__TestContext001_BeanDefinitions.DispatcherServletConfiguration.getDispatcherServletBeanDefinition());
    beanFactory.registerBeanDefinition("spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties", WebMvcProperties__TestContext001_BeanDefinitions.getWebMvcPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration", DispatcherServletAutoConfiguration__TestContext001_BeanDefinitions.DispatcherServletRegistrationConfiguration.getDispatcherServletRegistrationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dispatcherServletRegistration", DispatcherServletAutoConfiguration__TestContext001_BeanDefinitions.DispatcherServletRegistrationConfiguration.getDispatcherServletRegistrationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration", DispatcherServletAutoConfiguration__TestContext001_BeanDefinitions.getDispatcherServletAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.testcontainers.service.connection.ServiceConnectionAutoConfiguration", ServiceConnectionAutoConfiguration__TestContext001_BeanDefinitions.getServiceConnectionAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration", TaskExecutorConfigurations__TestContext001_BeanDefinitions.ThreadPoolTaskExecutorBuilderConfiguration.getThreadPoolTaskExecutorBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("threadPoolTaskExecutorBuilder", TaskExecutorConfigurations__TestContext001_BeanDefinitions.ThreadPoolTaskExecutorBuilderConfiguration.getThreadPoolTaskExecutorBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration", TaskExecutorConfigurations__TestContext001_BeanDefinitions.TaskExecutorBuilderConfiguration.getTaskExecutorBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("taskExecutorBuilder", TaskExecutorConfigurations__TestContext001_BeanDefinitions.TaskExecutorBuilderConfiguration.getTaskExecutorBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration", TaskExecutorConfigurations__TestContext001_BeanDefinitions.SimpleAsyncTaskExecutorBuilderConfiguration.getSimpleAsyncTaskExecutorBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("simpleAsyncTaskExecutorBuilder", TaskExecutorConfigurations__TestContext001_BeanDefinitions.SimpleAsyncTaskExecutorBuilderConfiguration.getSimpleAsyncTaskExecutorBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration", TaskExecutorConfigurations__TestContext001_BeanDefinitions.TaskExecutorConfiguration.getTaskExecutorConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("applicationTaskExecutor", TaskExecutorConfigurations__TestContext001_BeanDefinitions.TaskExecutorConfiguration.getApplicationTaskExecutorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration", TaskExecutionAutoConfiguration__TestContext001_BeanDefinitions.getTaskExecutionAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties", TaskExecutionProperties__TestContext001_BeanDefinitions.getTaskExecutionPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration", ValidationAutoConfiguration__TestContext001_BeanDefinitions.getValidationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultValidator", ValidationAutoConfiguration__TestContext001_BeanDefinitions.getDefaultValidatorBeanDefinition());
    beanFactory.registerBeanDefinition("methodValidationPostProcessor", ValidationAutoConfiguration__TestContext001_BeanDefinitions.getMethodValidationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.WhitelabelErrorViewConfiguration.getWhitelabelErrorViewConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("error", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.WhitelabelErrorViewConfiguration.getErrorBeanDefinition());
    beanFactory.registerBeanDefinition("beanNameViewResolver", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.WhitelabelErrorViewConfiguration.getBeanNameViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.DefaultErrorViewResolverConfiguration.getDefaultErrorViewResolverConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("conventionErrorViewResolver", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.DefaultErrorViewResolverConfiguration.getConventionErrorViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("spring.web-org.springframework.boot.autoconfigure.web.WebProperties", WebProperties__TestContext001_BeanDefinitions.getWebPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.getErrorMvcAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("errorAttributes", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.getErrorAttributesBeanDefinition());
    beanFactory.registerBeanDefinition("basicErrorController", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.getBasicErrorControllerBeanDefinition());
    beanFactory.registerBeanDefinition("errorPageCustomizer", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.getErrorPageCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("preserveErrorControllerTargetClassPostProcessor", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.getPreserveErrorControllerTargetClassPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getEnableWebMvcConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("welcomePageHandlerMapping", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getWelcomePageHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("welcomePageNotAcceptableHandlerMapping", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getWelcomePageNotAcceptableHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("localeResolver", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getLocaleResolverBeanDefinition());
    beanFactory.registerBeanDefinition("themeResolver", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getThemeResolverBeanDefinition());
    beanFactory.registerBeanDefinition("flashMapManager", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getFlashMapManagerBeanDefinition());
    beanFactory.registerBeanDefinition("mvcConversionService", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getMvcConversionServiceBeanDefinition());
    beanFactory.registerBeanDefinition("mvcValidator", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getMvcValidatorBeanDefinition());
    beanFactory.registerBeanDefinition("mvcContentNegotiationManager", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getMvcContentNegotiationManagerBeanDefinition());
    beanFactory.registerBeanDefinition("requestMappingHandlerMapping", WebMvcConfigurationSupport__TestContext001_BeanDefinitions.getRequestMappingHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("mvcPatternParser", WebMvcConfigurationSupport__TestContext001_BeanDefinitions.getMvcPatternParserBeanDefinition());
    beanFactory.registerBeanDefinition("mvcUrlPathHelper", WebMvcConfigurationSupport__TestContext001_BeanDefinitions.getMvcUrlPathHelperBeanDefinition());
    beanFactory.registerBeanDefinition("mvcPathMatcher", WebMvcConfigurationSupport__TestContext001_BeanDefinitions.getMvcPathMatcherBeanDefinition());
    beanFactory.registerBeanDefinition("viewControllerHandlerMapping", WebMvcConfigurationSupport__TestContext001_BeanDefinitions.getViewControllerHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("beanNameHandlerMapping", WebMvcConfigurationSupport__TestContext001_BeanDefinitions.getBeanNameHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("routerFunctionMapping", WebMvcConfigurationSupport__TestContext001_BeanDefinitions.getRouterFunctionMappingBeanDefinition());
    beanFactory.registerBeanDefinition("resourceHandlerMapping", WebMvcConfigurationSupport__TestContext001_BeanDefinitions.getResourceHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("mvcResourceUrlProvider", WebMvcConfigurationSupport__TestContext001_BeanDefinitions.getMvcResourceUrlProviderBeanDefinition());
    beanFactory.registerBeanDefinition("defaultServletHandlerMapping", WebMvcConfigurationSupport__TestContext001_BeanDefinitions.getDefaultServletHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("requestMappingHandlerAdapter", WebMvcConfigurationSupport__TestContext001_BeanDefinitions.getRequestMappingHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("handlerFunctionAdapter", WebMvcConfigurationSupport__TestContext001_BeanDefinitions.getHandlerFunctionAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("mvcUriComponentsContributor", WebMvcConfigurationSupport__TestContext001_BeanDefinitions.getMvcUriComponentsContributorBeanDefinition());
    beanFactory.registerBeanDefinition("httpRequestHandlerAdapter", WebMvcConfigurationSupport__TestContext001_BeanDefinitions.getHttpRequestHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("simpleControllerHandlerAdapter", WebMvcConfigurationSupport__TestContext001_BeanDefinitions.getSimpleControllerHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("handlerExceptionResolver", WebMvcConfigurationSupport__TestContext001_BeanDefinitions.getHandlerExceptionResolverBeanDefinition());
    beanFactory.registerBeanDefinition("mvcViewResolver", WebMvcConfigurationSupport__TestContext001_BeanDefinitions.getMvcViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("mvcHandlerMappingIntrospector", WebMvcConfigurationSupport__TestContext001_BeanDefinitions.getMvcHandlerMappingIntrospectorBeanDefinition());
    beanFactory.registerBeanDefinition("viewNameTranslator", WebMvcConfigurationSupport__TestContext001_BeanDefinitions.getViewNameTranslatorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.WebMvcAutoConfigurationAdapter.getWebMvcAutoConfigurationAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("defaultViewResolver", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.WebMvcAutoConfigurationAdapter.getDefaultViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("viewResolver", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.WebMvcAutoConfigurationAdapter.getViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("requestContextFilter", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.WebMvcAutoConfigurationAdapter.getRequestContextFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.getWebMvcAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("formContentFilter", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.getFormContentFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration$RabbitConnectionFactoryCreator", RabbitAutoConfiguration__TestContext001_BeanDefinitions.RabbitConnectionFactoryCreator.getRabbitConnectionFactoryCreatorBeanDefinition());
    beanFactory.registerBeanDefinition("rabbitConnectionFactoryBeanConfigurer", RabbitAutoConfiguration__TestContext001_BeanDefinitions.RabbitConnectionFactoryCreator.getRabbitConnectionFactoryBeanConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("rabbitConnectionFactoryConfigurer", RabbitAutoConfiguration__TestContext001_BeanDefinitions.RabbitConnectionFactoryCreator.getRabbitConnectionFactoryConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("rabbitConnectionFactory", RabbitAutoConfiguration__TestContext001_BeanDefinitions.RabbitConnectionFactoryCreator.getRabbitConnectionFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration$RabbitTemplateConfiguration", RabbitAutoConfiguration__TestContext001_BeanDefinitions.RabbitTemplateConfiguration.getRabbitTemplateConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("rabbitTemplateConfigurer", RabbitAutoConfiguration__TestContext001_BeanDefinitions.RabbitTemplateConfiguration.getRabbitTemplateConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("rabbitTemplate", RabbitAutoConfiguration__TestContext001_BeanDefinitions.RabbitTemplateConfiguration.getRabbitTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("amqpAdmin", RabbitAutoConfiguration__TestContext001_BeanDefinitions.RabbitTemplateConfiguration.getAmqpAdminBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration$MessagingTemplateConfiguration", RabbitAutoConfiguration__TestContext001_BeanDefinitions.MessagingTemplateConfiguration.getMessagingTemplateConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("rabbitMessagingTemplate", RabbitAutoConfiguration__TestContext001_BeanDefinitions.MessagingTemplateConfiguration.getRabbitMessagingTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.amqp.RabbitAnnotationDrivenConfiguration$EnableRabbitConfiguration", RabbitAnnotationDrivenConfiguration__TestContext001_BeanDefinitions.EnableRabbitConfiguration.getEnableRabbitConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.amqp.rabbit.config.internalRabbitListenerAnnotationProcessor", RabbitListenerAnnotationBeanPostProcessor__TestContext001_BeanDefinitions.getInternalRabbitListenerAnnotationProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.amqp.rabbit.config.internalRabbitListenerEndpointRegistry", RabbitListenerEndpointRegistry__TestContext001_BeanDefinitions.getInternalRabbitListenerEndpointRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.amqp.RabbitAnnotationDrivenConfiguration", RabbitAnnotationDrivenConfiguration__TestContext001_BeanDefinitions.getRabbitAnnotationDrivenConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("simpleRabbitListenerContainerFactoryConfigurer", RabbitAnnotationDrivenConfiguration__TestContext001_BeanDefinitions.getSimpleRabbitListenerContainerFactoryConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("rabbitListenerContainerFactory", RabbitAnnotationDrivenConfiguration__TestContext001_BeanDefinitions.getRabbitListenerContainerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("directRabbitListenerContainerFactoryConfigurer", RabbitAnnotationDrivenConfiguration__TestContext001_BeanDefinitions.getDirectRabbitListenerContainerFactoryConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration", RabbitAutoConfiguration__TestContext001_BeanDefinitions.getRabbitAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.rabbitmq-org.springframework.boot.autoconfigure.amqp.RabbitProperties", RabbitProperties__TestContext001_BeanDefinitions.getRabbitPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.amqp.RabbitHealthContributorAutoConfiguration", RabbitHealthContributorAutoConfiguration__TestContext001_BeanDefinitions.getRabbitHealthContributorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("rabbitHealthContributor", RabbitHealthContributorAutoConfiguration__TestContext001_BeanDefinitions.getRabbitHealthContributorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration", ApplicationAvailabilityAutoConfiguration__TestContext001_BeanDefinitions.getApplicationAvailabilityAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("applicationAvailability", ApplicationAvailabilityAutoConfiguration__TestContext001_BeanDefinitions.getApplicationAvailabilityBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration", AvailabilityHealthContributorAutoConfiguration__TestContext001_BeanDefinitions.getAvailabilityHealthContributorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration", JtaAutoConfiguration__TestContext001_BeanDefinitions.getJtaAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari", DataSourceConfiguration__TestContext001_BeanDefinitions.Hikari.getHikariBeanDefinition());
    beanFactory.registerBeanDefinition("jdbcConnectionDetailsHikariBeanPostProcessor", DataSourceConfiguration__TestContext001_BeanDefinitions.Hikari.getJdbcConnectionDetailsHikariBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("dataSource", DataSourceConfiguration__TestContext001_BeanDefinitions.Hikari.getDataSourceBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration", DataSourceAutoConfiguration__TestContext001_BeanDefinitions.PooledDataSourceConfiguration.getPooledDataSourceConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration", DataSourcePoolMetadataProvidersConfiguration__TestContext001_BeanDefinitions.HikariPoolDataSourceMetadataProviderConfiguration.getHikariPoolDataSourceMetadataProviderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("hikariPoolDataSourceMetadataProvider", DataSourcePoolMetadataProvidersConfiguration__TestContext001_BeanDefinitions.HikariPoolDataSourceMetadataProviderConfiguration.getHikariPoolDataSourceMetadataProviderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration", DataSourcePoolMetadataProvidersConfiguration__TestContext001_BeanDefinitions.getDataSourcePoolMetadataProvidersConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration", DataSourceAutoConfiguration__TestContext001_BeanDefinitions.getDataSourceAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties", DataSourceProperties__TestContext001_BeanDefinitions.getDataSourcePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration", TransactionManagerCustomizationAutoConfiguration__TestContext001_BeanDefinitions.getTransactionManagerCustomizationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("platformTransactionManagerCustomizers", TransactionManagerCustomizationAutoConfiguration__TestContext001_BeanDefinitions.getPlatformTransactionManagerCustomizersBeanDefinition());
    beanFactory.registerBeanDefinition("transactionExecutionListeners", TransactionManagerCustomizationAutoConfiguration__TestContext001_BeanDefinitions.getTransactionExecutionListenersBeanDefinition());
    beanFactory.registerBeanDefinition("spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties", TransactionProperties__TestContext001_BeanDefinitions.getTransactionPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration", JpaBaseConfiguration__TestContext001_BeanDefinitions.JpaWebConfiguration.getJpaWebConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("openEntityManagerInViewInterceptor", JpaBaseConfiguration__TestContext001_BeanDefinitions.JpaWebConfiguration.getOpenEntityManagerInViewInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("openEntityManagerInViewInterceptorConfigurer", JpaBaseConfiguration__TestContext001_BeanDefinitions.JpaWebConfiguration.getOpenEntityManagerInViewInterceptorConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration", JpaBaseConfiguration__TestContext001_BeanDefinitions.PersistenceManagedTypesConfiguration.getPersistenceManagedTypesConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("persistenceManagedTypes", JpaBaseConfiguration__TestContext001_BeanDefinitions.PersistenceManagedTypesConfiguration.getPersistenceManagedTypesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration", HibernateJpaConfiguration__TestContext001_BeanDefinitions.getHibernateJpaConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("transactionManager", JpaBaseConfiguration__TestContext001_BeanDefinitions.getTransactionManagerBeanDefinition());
    beanFactory.registerBeanDefinition("jpaVendorAdapter", JpaBaseConfiguration__TestContext001_BeanDefinitions.getJpaVendorAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("entityManagerFactoryBuilder", JpaBaseConfiguration__TestContext001_BeanDefinitions.getEntityManagerFactoryBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("entityManagerFactory", JpaBaseConfiguration__TestContext001_BeanDefinitions.getEntityManagerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties", HibernateProperties__TestContext001_BeanDefinitions.getHibernatePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties", JpaProperties__TestContext001_BeanDefinitions.getJpaPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration", HibernateJpaAutoConfiguration__TestContext001_BeanDefinitions.getHibernateJpaAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration", JacksonAutoConfiguration__TestContext001_BeanDefinitions.Jackson2ObjectMapperBuilderCustomizerConfiguration.getJacksonObjectMapperBuilderCustomizerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("standardJacksonObjectMapperBuilderCustomizer", JacksonAutoConfiguration__TestContext001_BeanDefinitions.Jackson2ObjectMapperBuilderCustomizerConfiguration.getStandardJacksonObjectMapperBuilderCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties", JacksonProperties__TestContext001_BeanDefinitions.getJacksonPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration", JacksonAutoConfiguration__TestContext001_BeanDefinitions.JacksonObjectMapperBuilderConfiguration.getJacksonObjectMapperBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonObjectMapperBuilder", JacksonAutoConfiguration__TestContext001_BeanDefinitions.JacksonObjectMapperBuilderConfiguration.getJacksonObjectMapperBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration", JacksonAutoConfiguration__TestContext001_BeanDefinitions.ParameterNamesModuleConfiguration.getParameterNamesModuleConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("parameterNamesModule", JacksonAutoConfiguration__TestContext001_BeanDefinitions.ParameterNamesModuleConfiguration.getParameterNamesModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration", JacksonAutoConfiguration__TestContext001_BeanDefinitions.JacksonObjectMapperConfiguration.getJacksonObjectMapperConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonObjectMapper", JacksonAutoConfiguration__TestContext001_BeanDefinitions.JacksonObjectMapperConfiguration.getJacksonObjectMapperBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration", JacksonAutoConfiguration__TestContext001_BeanDefinitions.JacksonMixinConfiguration.getJacksonMixinConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jsonMixinModuleEntries", JsonMixinModuleEntries__TestContext001_BeanDefinitions.getJsonMixinModuleEntriesBeanDefinition());
    beanFactory.registerBeanDefinition("jsonMixinModule", JacksonAutoConfiguration__TestContext001_BeanDefinitions.JacksonMixinConfiguration.getJsonMixinModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration", JacksonAutoConfiguration__TestContext001_BeanDefinitions.getJacksonAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jsonComponentModule", JacksonAutoConfiguration__TestContext001_BeanDefinitions.getJsonComponentModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration", HealthEndpointConfiguration__TestContext001_BeanDefinitions.getHealthEndpointConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("healthStatusAggregator", HealthEndpointConfiguration__TestContext001_BeanDefinitions.getHealthStatusAggregatorBeanDefinition());
    beanFactory.registerBeanDefinition("healthHttpCodeStatusMapper", HealthEndpointConfiguration__TestContext001_BeanDefinitions.getHealthHttpCodeStatusMapperBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpointGroups", HealthEndpointConfiguration__TestContext001_BeanDefinitions.getHealthEndpointGroupsBeanDefinition());
    beanFactory.registerBeanDefinition("healthContributorRegistry", HealthEndpointConfiguration__TestContext001_BeanDefinitions.getHealthContributorRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpointGroupMembershipValidator", HealthEndpointConfiguration__TestContext001_BeanDefinitions.getHealthEndpointGroupMembershipValidatorBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpoint", HealthEndpointConfiguration__TestContext001_BeanDefinitions.getHealthEndpointBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpointGroupsBeanPostProcessor", HealthEndpointConfiguration__TestContext001_BeanDefinitions.getHealthEndpointGroupsBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration", HealthEndpointWebExtensionConfiguration__TestContext001_BeanDefinitions.MvcAdditionalHealthEndpointPathsConfiguration.getMvcAdditionalHealthEndpointPathsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpointWebMvcHandlerMapping", HealthEndpointWebExtensionConfiguration__TestContext001_BeanDefinitions.MvcAdditionalHealthEndpointPathsConfiguration.getHealthEndpointWebMvcHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration", HealthEndpointWebExtensionConfiguration__TestContext001_BeanDefinitions.getHealthEndpointWebExtensionConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpointWebExtension", HealthEndpointWebExtensionConfiguration__TestContext001_BeanDefinitions.getHealthEndpointWebExtensionBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration", HealthEndpointAutoConfiguration__TestContext001_BeanDefinitions.getHealthEndpointAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties", HealthEndpointProperties__TestContext001_BeanDefinitions.getHealthEndpointPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration", ProjectInfoAutoConfiguration__TestContext001_BeanDefinitions.getProjectInfoAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties", ProjectInfoProperties__TestContext001_BeanDefinitions.getProjectInfoPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration", InfoContributorAutoConfiguration__TestContext001_BeanDefinitions.getInfoContributorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("management.info-org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties", InfoContributorProperties__TestContext001_BeanDefinitions.getInfoContributorPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration", ServletManagementContextAutoConfiguration__TestContext001_BeanDefinitions.getServletManagementContextAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("servletWebChildContextFactory", ServletManagementContextAutoConfiguration__TestContext001_BeanDefinitions.getServletWebChildContextFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("managementServletContext", ServletManagementContextAutoConfiguration__TestContext001_BeanDefinitions.getManagementServletContextBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration", EndpointAutoConfiguration__TestContext001_BeanDefinitions.getEndpointAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("endpointOperationParameterMapper", EndpointAutoConfiguration__TestContext001_BeanDefinitions.getEndpointOperationParameterMapperBeanDefinition());
    beanFactory.registerBeanDefinition("endpointCachingOperationInvokerAdvisor", EndpointAutoConfiguration__TestContext001_BeanDefinitions.getEndpointCachingOperationInvokerAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration", JacksonEndpointAutoConfiguration__TestContext001_BeanDefinitions.getJacksonEndpointAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("endpointObjectMapper", JacksonEndpointAutoConfiguration__TestContext001_BeanDefinitions.getEndpointObjectMapperBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration", WebEndpointAutoConfiguration__TestContext001_BeanDefinitions.WebEndpointServletConfiguration.getWebEndpointServletConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("servletEndpointDiscoverer", WebEndpointAutoConfiguration__TestContext001_BeanDefinitions.WebEndpointServletConfiguration.getServletEndpointDiscovererBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration", WebEndpointAutoConfiguration__TestContext001_BeanDefinitions.getWebEndpointAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webEndpointPathMapper", WebEndpointAutoConfiguration__TestContext001_BeanDefinitions.getWebEndpointPathMapperBeanDefinition());
    beanFactory.registerBeanDefinition("endpointMediaTypes", WebEndpointAutoConfiguration__TestContext001_BeanDefinitions.getEndpointMediaTypesBeanDefinition());
    beanFactory.registerBeanDefinition("webEndpointDiscoverer", WebEndpointAutoConfiguration__TestContext001_BeanDefinitions.getWebEndpointDiscovererBeanDefinition());
    beanFactory.registerBeanDefinition("controllerEndpointDiscoverer", WebEndpointAutoConfiguration__TestContext001_BeanDefinitions.getControllerEndpointDiscovererBeanDefinition());
    beanFactory.registerBeanDefinition("pathMappedEndpoints", WebEndpointAutoConfiguration__TestContext001_BeanDefinitions.getPathMappedEndpointsBeanDefinition());
    beanFactory.registerBeanDefinition("webExposeExcludePropertyEndpointFilter", WebEndpointAutoConfiguration__TestContext001_BeanDefinitions.getWebExposeExcludePropertyEndpointFilterBeanDefinition());
    beanFactory.registerBeanDefinition("controllerExposeExcludePropertyEndpointFilter", WebEndpointAutoConfiguration__TestContext001_BeanDefinitions.getControllerExposeExcludePropertyEndpointFilterBeanDefinition());
    beanFactory.registerBeanDefinition("management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties", WebEndpointProperties__TestContext001_BeanDefinitions.getWebEndpointPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration", JdbcTemplateConfiguration__TestContext001_BeanDefinitions.getJdbcTemplateConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jdbcTemplate", JdbcTemplateConfiguration__TestContext001_BeanDefinitions.getJdbcTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration", NamedParameterJdbcTemplateConfiguration__TestContext001_BeanDefinitions.getNamedParameterJdbcTemplateConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("namedParameterJdbcTemplate", NamedParameterJdbcTemplateConfiguration__TestContext001_BeanDefinitions.getNamedParameterJdbcTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration", JdbcTemplateAutoConfiguration__TestContext001_BeanDefinitions.getJdbcTemplateAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties", JdbcProperties__TestContext001_BeanDefinitions.getJdbcPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor", DatabaseInitializationDependencyConfigurer__TestContext001_BeanDefinitions.DependsOnDatabaseInitializationPostProcessor.getDependsOnDatabaseInitializationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration", FlywayAutoConfiguration__TestContext001_BeanDefinitions.FlywayConfiguration.getFlywayConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("resourceProviderCustomizer", FlywayAutoConfiguration__TestContext001_BeanDefinitions.FlywayConfiguration.getResourceProviderCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("postgresqlFlywayConfigurationCustomizer", FlywayAutoConfiguration__TestContext001_BeanDefinitions.FlywayConfiguration.getPostgresqlFlywayConfigurationCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("flyway", FlywayAutoConfiguration__TestContext001_BeanDefinitions.FlywayConfiguration.getFlywayBeanDefinition());
    beanFactory.registerBeanDefinition("flywayInitializer", FlywayAutoConfiguration__TestContext001_BeanDefinitions.FlywayConfiguration.getFlywayInitializerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.flyway-org.springframework.boot.autoconfigure.flyway.FlywayProperties", FlywayProperties__TestContext001_BeanDefinitions.getFlywayPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration", FlywayAutoConfiguration__TestContext001_BeanDefinitions.getFlywayAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("stringOrNumberMigrationVersionConverter", FlywayAutoConfiguration__TestContext001_BeanDefinitions.getStringOrNumberMigrationVersionConverterBeanDefinition());
    beanFactory.registerBeanDefinition("flywayDefaultDdlModeProvider", FlywayAutoConfiguration__TestContext001_BeanDefinitions.getFlywayDefaultDdlModeProviderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration", DiskSpaceHealthContributorAutoConfiguration__TestContext001_BeanDefinitions.getDiskSpaceHealthContributorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("diskSpaceHealthIndicator", DiskSpaceHealthContributorAutoConfiguration__TestContext001_BeanDefinitions.getDiskSpaceHealthIndicatorBeanDefinition());
    beanFactory.registerBeanDefinition("management.health.diskspace-org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties", DiskSpaceHealthIndicatorProperties__TestContext001_BeanDefinitions.getDiskSpaceHealthIndicatorPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration", HealthContributorAutoConfiguration__TestContext001_BeanDefinitions.getHealthContributorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("pingHealthContributor", HealthContributorAutoConfiguration__TestContext001_BeanDefinitions.getPingHealthContributorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration", DataSourceHealthContributorAutoConfiguration__TestContext001_BeanDefinitions.getDataSourceHealthContributorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dbHealthContributor", DataSourceHealthContributorAutoConfiguration__TestContext001_BeanDefinitions.getDbHealthContributorBeanDefinition());
    beanFactory.registerBeanDefinition("management.health.db-org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties", DataSourceHealthIndicatorProperties__TestContext001_BeanDefinitions.getDataSourceHealthIndicatorPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration", MetricsAutoConfiguration__TestContext001_BeanDefinitions.getMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("micrometerClock", MetricsAutoConfiguration__TestContext001_BeanDefinitions.getMicrometerClockBeanDefinition());
    beanFactory.registerBeanDefinition("meterRegistryPostProcessor", MetricsAutoConfiguration__TestContext001_BeanDefinitions.getMeterRegistryPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("propertiesMeterFilter", MetricsAutoConfiguration__TestContext001_BeanDefinitions.getPropertiesMeterFilterBeanDefinition());
    beanFactory.registerBeanDefinition("meterRegistryCloser", MetricsAutoConfiguration__TestContext001_BeanDefinitions.getMeterRegistryCloserBeanDefinition());
    beanFactory.registerBeanDefinition("management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties", MetricsProperties__TestContext001_BeanDefinitions.getMetricsPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration", SimpleMetricsExportAutoConfiguration__TestContext001_BeanDefinitions.getSimpleMetricsExportAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("simpleMeterRegistry", SimpleMetricsExportAutoConfiguration__TestContext001_BeanDefinitions.getSimpleMeterRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("simpleConfig", SimpleMetricsExportAutoConfiguration__TestContext001_BeanDefinitions.getSimpleConfigBeanDefinition());
    beanFactory.registerBeanDefinition("management.simple.metrics.export-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties", SimpleProperties__TestContext001_BeanDefinitions.getSimplePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration", CompositeMeterRegistryAutoConfiguration__TestContext001_BeanDefinitions.getCompositeMeterRegistryAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration", JvmMetricsAutoConfiguration__TestContext001_BeanDefinitions.getJvmMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jvmGcMetrics", JvmMetricsAutoConfiguration__TestContext001_BeanDefinitions.getJvmGcMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("jvmHeapPressureMetrics", JvmMetricsAutoConfiguration__TestContext001_BeanDefinitions.getJvmHeapPressureMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("jvmMemoryMetrics", JvmMetricsAutoConfiguration__TestContext001_BeanDefinitions.getJvmMemoryMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("jvmThreadMetrics", JvmMetricsAutoConfiguration__TestContext001_BeanDefinitions.getJvmThreadMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("classLoaderMetrics", JvmMetricsAutoConfiguration__TestContext001_BeanDefinitions.getClassLoaderMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("jvmInfoMetrics", JvmMetricsAutoConfiguration__TestContext001_BeanDefinitions.getJvmInfoMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("jvmCompilationMetrics", JvmMetricsAutoConfiguration__TestContext001_BeanDefinitions.getJvmCompilationMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration", LogbackMetricsAutoConfiguration__TestContext001_BeanDefinitions.getLogbackMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("logbackMetrics", LogbackMetricsAutoConfiguration__TestContext001_BeanDefinitions.getLogbackMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration", SystemMetricsAutoConfiguration__TestContext001_BeanDefinitions.getSystemMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("uptimeMetrics", SystemMetricsAutoConfiguration__TestContext001_BeanDefinitions.getUptimeMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("processorMetrics", SystemMetricsAutoConfiguration__TestContext001_BeanDefinitions.getProcessorMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("fileDescriptorMetrics", SystemMetricsAutoConfiguration__TestContext001_BeanDefinitions.getFileDescriptorMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("diskSpaceMetrics", SystemMetricsAutoConfiguration__TestContext001_BeanDefinitions.getDiskSpaceMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.amqp.RabbitMetricsAutoConfiguration", RabbitMetricsAutoConfiguration__TestContext001_BeanDefinitions.getRabbitMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("rabbitConnectionFactoryMetricsPostProcessor", RabbitMetricsAutoConfiguration__TestContext001_BeanDefinitions.getRabbitConnectionFactoryMetricsPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration", RepositoryMetricsAutoConfiguration__TestContext001_BeanDefinitions.getRepositoryMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryTagsProvider", RepositoryMetricsAutoConfiguration__TestContext001_BeanDefinitions.getRepositoryTagsProviderBeanDefinition());
    beanFactory.registerBeanDefinition("metricsRepositoryMethodInvocationListener", RepositoryMetricsAutoConfiguration__TestContext001_BeanDefinitions.getMetricsRepositoryMethodInvocationListenerBeanDefinition());
    beanFactory.registerBeanDefinition("metricsRepositoryMethodInvocationListenerBeanPostProcessor", RepositoryMetricsAutoConfiguration__TestContext001_BeanDefinitions.getMetricsRepositoryMethodInvocationListenerBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration", IntegrationMetricsAutoConfiguration__TestContext001_BeanDefinitions.getIntegrationMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration", DataSourcePoolMetricsAutoConfiguration__TestContext001_BeanDefinitions.HikariDataSourceMetricsConfiguration.getHikariDataSourceMetricsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("hikariDataSourceMeterBinder", DataSourcePoolMetricsAutoConfiguration__TestContext001_BeanDefinitions.HikariDataSourceMetricsConfiguration.getHikariDataSourceMeterBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration", DataSourcePoolMetricsAutoConfiguration__TestContext001_BeanDefinitions.DataSourcePoolMetadataMetricsConfiguration.getDataSourcePoolMetadataMetricsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dataSourcePoolMetadataMeterBinder", DataSourcePoolMetricsAutoConfiguration__TestContext001_BeanDefinitions.DataSourcePoolMetadataMetricsConfiguration.getDataSourcePoolMetadataMeterBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration", DataSourcePoolMetricsAutoConfiguration__TestContext001_BeanDefinitions.getDataSourcePoolMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration", StartupTimeMetricsListenerAutoConfiguration__TestContext001_BeanDefinitions.getStartupTimeMetricsListenerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("startupTimeMetrics", StartupTimeMetricsListenerAutoConfiguration__TestContext001_BeanDefinitions.getStartupTimeMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration", TaskSchedulingConfigurations__TestContext001_BeanDefinitions.ThreadPoolTaskSchedulerBuilderConfiguration.getThreadPoolTaskSchedulerBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("threadPoolTaskSchedulerBuilder", TaskSchedulingConfigurations__TestContext001_BeanDefinitions.ThreadPoolTaskSchedulerBuilderConfiguration.getThreadPoolTaskSchedulerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration", TaskSchedulingConfigurations__TestContext001_BeanDefinitions.TaskSchedulerBuilderConfiguration.getTaskSchedulerBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("taskSchedulerBuilder", TaskSchedulingConfigurations__TestContext001_BeanDefinitions.TaskSchedulerBuilderConfiguration.getTaskSchedulerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration", TaskSchedulingConfigurations__TestContext001_BeanDefinitions.SimpleAsyncTaskSchedulerBuilderConfiguration.getSimpleAsyncTaskSchedulerBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("simpleAsyncTaskSchedulerBuilder", TaskSchedulingConfigurations__TestContext001_BeanDefinitions.SimpleAsyncTaskSchedulerBuilderConfiguration.getSimpleAsyncTaskSchedulerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration", TaskSchedulingAutoConfiguration__TestContext001_BeanDefinitions.getTaskSchedulingAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties", TaskSchedulingProperties__TestContext001_BeanDefinitions.getTaskSchedulingPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration", TaskExecutorMetricsAutoConfiguration__TestContext001_BeanDefinitions.getTaskExecutorMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("eagerTaskExecutorMetrics", TaskExecutorMetricsAutoConfiguration__TestContext001_BeanDefinitions.getEagerTaskExecutorMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration", TomcatMetricsAutoConfiguration__TestContext001_BeanDefinitions.getTomcatMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("tomcatMetricsBinder", TomcatMetricsAutoConfiguration__TestContext001_BeanDefinitions.getTomcatMetricsBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$ObservedAspectConfiguration", ObservationAutoConfiguration__TestContext001_BeanDefinitions.ObservedAspectConfiguration.getObservedAspectConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("observedAspect", ObservationAutoConfiguration__TestContext001_BeanDefinitions.ObservedAspectConfiguration.getObservedAspectBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration", ObservationAutoConfiguration__TestContext001_BeanDefinitions.MeterObservationHandlerConfiguration.OnlyMetricsMeterObservationHandlerConfiguration.getOnlyMetricsMeterObservationHandlerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultMeterObservationHandler", ObservationAutoConfiguration__TestContext001_BeanDefinitions.MeterObservationHandlerConfiguration.OnlyMetricsMeterObservationHandlerConfiguration.getDefaultMeterObservationHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration", ObservationAutoConfiguration__TestContext001_BeanDefinitions.MeterObservationHandlerConfiguration.getMeterObservationHandlerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration", ObservationAutoConfiguration__TestContext001_BeanDefinitions.OnlyMetricsConfiguration.getOnlyMetricsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("metricsObservationHandlerGrouping", ObservationAutoConfiguration__TestContext001_BeanDefinitions.OnlyMetricsConfiguration.getMetricsObservationHandlerGroupingBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration", ObservationAutoConfiguration__TestContext001_BeanDefinitions.getObservationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("observationRegistryPostProcessor", ObservationAutoConfiguration__TestContext001_BeanDefinitions.getObservationRegistryPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("observationRegistry", ObservationAutoConfiguration__TestContext001_BeanDefinitions.getObservationRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("propertiesObservationFilter", ObservationAutoConfiguration__TestContext001_BeanDefinitions.getPropertiesObservationFilterBeanDefinition());
    beanFactory.registerBeanDefinition("management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties", ObservationProperties__TestContext001_BeanDefinitions.getObservationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration", GsonAutoConfiguration__TestContext001_BeanDefinitions.getGsonAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("gsonBuilder", GsonAutoConfiguration__TestContext001_BeanDefinitions.getGsonBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("gson", GsonAutoConfiguration__TestContext001_BeanDefinitions.getGsonBeanDefinition());
    beanFactory.registerBeanDefinition("standardGsonBuilderCustomizer", GsonAutoConfiguration__TestContext001_BeanDefinitions.getStandardGsonBuilderCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties", GsonProperties__TestContext001_BeanDefinitions.getGsonPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration", HttpMessageConvertersAutoConfiguration__TestContext001_BeanDefinitions.StringHttpMessageConverterConfiguration.getStringHttpMessageConverterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("stringHttpMessageConverter", HttpMessageConvertersAutoConfiguration__TestContext001_BeanDefinitions.StringHttpMessageConverterConfiguration.getStringHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration", JacksonHttpMessageConvertersConfiguration__TestContext001_BeanDefinitions.MappingJackson2HttpMessageConverterConfiguration.getMappingJacksonHttpMessageConverterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("mappingJackson2HttpMessageConverter", JacksonHttpMessageConvertersConfiguration__TestContext001_BeanDefinitions.MappingJackson2HttpMessageConverterConfiguration.getMappingJacksonHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration", JacksonHttpMessageConvertersConfiguration__TestContext001_BeanDefinitions.getJacksonHttpMessageConvertersConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration", GsonHttpMessageConvertersConfiguration__TestContext001_BeanDefinitions.getGsonHttpMessageConvertersConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration", HttpMessageConvertersAutoConfiguration__TestContext001_BeanDefinitions.getHttpMessageConvertersAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("messageConverters", HttpMessageConvertersAutoConfiguration__TestContext001_BeanDefinitions.getMessageConvertersBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration", RestClientAutoConfiguration__TestContext001_BeanDefinitions.getRestClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("httpMessageConvertersRestClientCustomizer", RestClientAutoConfiguration__TestContext001_BeanDefinitions.getHttpMessageConvertersRestClientCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("restClientSsl", RestClientAutoConfiguration__TestContext001_BeanDefinitions.getRestClientSslBeanDefinition());
    beanFactory.registerBeanDefinition("restClientBuilderConfigurer", RestClientAutoConfiguration__TestContext001_BeanDefinitions.getRestClientBuilderConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("restClientBuilder", RestClientAutoConfiguration__TestContext001_BeanDefinitions.getRestClientBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration", RestTemplateAutoConfiguration__TestContext001_BeanDefinitions.getRestTemplateAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("restTemplateBuilderConfigurer", RestTemplateAutoConfiguration__TestContext001_BeanDefinitions.getRestTemplateBuilderConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("restTemplateBuilder", RestTemplateAutoConfiguration__TestContext001_BeanDefinitions.getRestTemplateBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration", HttpClientObservationsAutoConfiguration__TestContext001_BeanDefinitions.MeterFilterConfiguration.getMeterFilterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("metricsHttpClientUriTagFilter", HttpClientObservationsAutoConfiguration__TestContext001_BeanDefinitions.MeterFilterConfiguration.getMetricsHttpClientUriTagFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration", RestTemplateObservationConfiguration__TestContext001_BeanDefinitions.getRestTemplateObservationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("observationRestTemplateCustomizer", RestTemplateObservationConfiguration__TestContext001_BeanDefinitions.getObservationRestTemplateCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration", RestClientObservationConfiguration__TestContext001_BeanDefinitions.getRestClientObservationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("observationRestClientCustomizer", RestClientObservationConfiguration__TestContext001_BeanDefinitions.getObservationRestClientCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration", HttpClientObservationsAutoConfiguration__TestContext001_BeanDefinitions.getHttpClientObservationsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration", WebMvcObservationAutoConfiguration__TestContext001_BeanDefinitions.MeterFilterConfiguration.getMeterFilterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("metricsHttpServerUriTagFilter", WebMvcObservationAutoConfiguration__TestContext001_BeanDefinitions.MeterFilterConfiguration.getMetricsHttpServerUriTagFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration", WebMvcObservationAutoConfiguration__TestContext001_BeanDefinitions.getWebMvcObservationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webMvcObservationFilter", WebMvcObservationAutoConfiguration__TestContext001_BeanDefinitions.getWebMvcObservationFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration", ScheduledTasksObservabilityAutoConfiguration__TestContext001_BeanDefinitions.getScheduledTasksObservabilityAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("observabilitySchedulingConfigurer", ScheduledTasksObservabilityAutoConfiguration__TestContext001_BeanDefinitions.getObservabilitySchedulingConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration", AopAutoConfiguration__TestContext001_BeanDefinitions.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration.getCglibAutoProxyConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.aop.config.internalAutoProxyCreator", AnnotationAwareAspectJAutoProxyCreator__TestContext001_BeanDefinitions.getInternalAutoProxyCreatorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration", AopAutoConfiguration__TestContext001_BeanDefinitions.AspectJAutoProxyingConfiguration.getAspectJAutoProxyingConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration", AopAutoConfiguration__TestContext001_BeanDefinitions.getAopAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration", ConfigurationPropertiesAutoConfiguration__TestContext001_BeanDefinitions.getConfigurationPropertiesAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration", LifecycleAutoConfiguration__TestContext001_BeanDefinitions.getLifecycleAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("lifecycleProcessor", LifecycleAutoConfiguration__TestContext001_BeanDefinitions.getLifecycleProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties", LifecycleProperties__TestContext001_BeanDefinitions.getLifecyclePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration", PersistenceExceptionTranslationAutoConfiguration__TestContext001_BeanDefinitions.getPersistenceExceptionTranslationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("persistenceExceptionTranslationPostProcessor", PersistenceExceptionTranslationAutoConfiguration__TestContext001_BeanDefinitions.getPersistenceExceptionTranslationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration", JpaRepositoriesAutoConfiguration__TestContext001_BeanDefinitions.getJpaRepositoriesAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jpaSharedEM_entityManagerFactory", SharedEntityManagerCreator__TestContext001_BeanDefinitions.getJpaSharedEMentityManagerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("emBeanDefinitionRegistrarPostProcessor", EntityManagerBeanDefinitionRegistrarPostProcessor__TestContext001_BeanDefinitions.getEmBeanDefinitionRegistrarPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("jpaMappingContext", JpaMetamodelMappingContext__TestContext001_BeanDefinitions.getJpaMappingContextBeanDefinition());
    beanFactory.registerBeanDefinition("jpaContext", DefaultJpaContext__TestContext001_BeanDefinitions.getJpaContextBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.jpa.util.JpaMetamodelCacheCleanup", JpaMetamodelCacheCleanup__TestContext001_BeanDefinitions.getJpaMetamodelCacheCleanupBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension", JpaEvaluationContextExtension__TestContext001_BeanDefinitions.getJpaEvaluationContextExtensionBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#0", PropertiesBasedNamedQueries__TestContext001_BeanDefinitions.getNamedqueriesBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.AccountRepository.fragments#0", RepositoryComposition__TestContext001_BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition());
    beanFactory.registerBeanDefinition("accountRepository", AccountRepository__TestContext001_BeanDefinitions.getAccountRepositoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.web.config.ProjectingArgumentResolverRegistrar", ProjectingArgumentResolverRegistrar__TestContext001_BeanDefinitions.getProjectingArgumentResolverRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("projectingArgumentResolverBeanPostProcessor", ProjectingArgumentResolverRegistrar__TestContext001_BeanDefinitions.getProjectingArgumentResolverBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.web.config.SpringDataWebConfiguration", SpringDataWebConfiguration__TestContext001_BeanDefinitions.getSpringDataWebConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("pageableResolver", SpringDataWebConfiguration__TestContext001_BeanDefinitions.getPageableResolverBeanDefinition());
    beanFactory.registerBeanDefinition("sortResolver", SpringDataWebConfiguration__TestContext001_BeanDefinitions.getSortResolverBeanDefinition());
    beanFactory.registerBeanDefinition("offsetResolver", SpringDataWebConfiguration__TestContext001_BeanDefinitions.getOffsetResolverBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.web.config.SpringDataJacksonConfiguration", SpringDataJacksonConfiguration__TestContext001_BeanDefinitions.getSpringDataJacksonConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonGeoModule", SpringDataJacksonConfiguration__TestContext001_BeanDefinitions.getJacksonGeoModuleBeanDefinition());
    beanFactory.registerBeanDefinition("pageModule", SpringDataJacksonConfiguration__TestContext001_BeanDefinitions.getPageModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration", SpringDataWebAutoConfiguration__TestContext001_BeanDefinitions.getSpringDataWebAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("pageableCustomizer", SpringDataWebAutoConfiguration__TestContext001_BeanDefinitions.getPageableCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("sortCustomizer", SpringDataWebAutoConfiguration__TestContext001_BeanDefinitions.getSortCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties", SpringDataWebProperties__TestContext001_BeanDefinitions.getSpringDataWebPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration", JdbcClientAutoConfiguration__TestContext001_BeanDefinitions.getJdbcClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jdbcClient", JdbcClientAutoConfiguration__TestContext001_BeanDefinitions.getJdbcClientBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration", ObjectPostProcessorConfiguration__TestContext001_BeanDefinitions.getObjectPostProcessorConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("objectPostProcessor", ObjectPostProcessorConfiguration__TestContext001_BeanDefinitions.getObjectPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration", org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration__TestContext001_BeanDefinitions.getAuthenticationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("authenticationManagerBuilder", org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration__TestContext001_BeanDefinitions.getAuthenticationManagerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("enableGlobalAuthenticationAutowiredConfigurer", org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration__TestContext001_BeanDefinitions.getEnableGlobalAuthenticationAutowiredConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("initializeUserDetailsBeanManagerConfigurer", org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration__TestContext001_BeanDefinitions.getInitializeUserDetailsBeanManagerConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("initializeAuthenticationProviderBeanManagerConfigurer", org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration__TestContext001_BeanDefinitions.getInitializeAuthenticationProviderBeanManagerConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration", WebSecurityConfiguration__TestContext001_BeanDefinitions.getWebSecurityConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("delegatingApplicationListener", WebSecurityConfiguration__TestContext001_BeanDefinitions.getDelegatingApplicationListenerBeanDefinition());
    beanFactory.registerBeanDefinition("webSecurityExpressionHandler", WebSecurityConfiguration__TestContext001_BeanDefinitions.getWebSecurityExpressionHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("privilegeEvaluator", WebSecurityConfiguration__TestContext001_BeanDefinitions.getPrivilegeEvaluatorBeanDefinition());
    beanFactory.registerBeanDefinition("conversionServicePostProcessor", WebSecurityConfiguration__TestContext001_BeanDefinitions.getConversionServicePostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration", WebMvcSecurityConfiguration__TestContext001_BeanDefinitions.getWebMvcSecurityConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("requestDataValueProcessor", WebMvcSecurityConfiguration__TestContext001_BeanDefinitions.getRequestDataValueProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("springSecurityHandlerMappingIntrospectorBeanDefinitionRegistryPostProcessor", WebMvcSecurityConfiguration__TestContext001_BeanDefinitions.getSpringSecurityHandlerMappingIntrospectorBeanDefinitionRegistryPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration", HttpSecurityConfiguration__TestContext001_BeanDefinitions.getHttpSecurityConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration.httpSecurity", HttpSecurityConfiguration__TestContext001_BeanDefinitions.getHttpSecurityBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$WebSecurityEnablerConfiguration", SpringBootWebSecurityConfiguration__TestContext001_BeanDefinitions.WebSecurityEnablerConfiguration.getWebSecurityEnablerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration", SpringBootWebSecurityConfiguration__TestContext001_BeanDefinitions.getSpringBootWebSecurityConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration", SecurityAutoConfiguration__TestContext001_BeanDefinitions.getSecurityAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("authenticationEventPublisher", SecurityAutoConfiguration__TestContext001_BeanDefinitions.getAuthenticationEventPublisherBeanDefinition());
    beanFactory.registerBeanDefinition("spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties", SecurityProperties__TestContext001_BeanDefinitions.getSecurityPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration", SecurityFilterAutoConfiguration__TestContext001_BeanDefinitions.getSecurityFilterAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("securityFilterChainRegistration", SecurityFilterAutoConfiguration__TestContext001_BeanDefinitions.getSecurityFilterChainRegistrationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration", DataSourceInitializationConfiguration__TestContext001_BeanDefinitions.getDataSourceInitializationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dataSourceScriptDatabaseInitializer", DataSourceInitializationConfiguration__TestContext001_BeanDefinitions.getDataSourceScriptDatabaseInitializerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration", SqlInitializationAutoConfiguration__TestContext001_BeanDefinitions.getSqlInitializationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties", SqlInitializationProperties__TestContext001_BeanDefinitions.getSqlInitializationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration", DataSourceTransactionManagerAutoConfiguration__TestContext001_BeanDefinitions.JdbcTransactionManagerConfiguration.getJdbcTransactionManagerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration", DataSourceTransactionManagerAutoConfiguration__TestContext001_BeanDefinitions.getDataSourceTransactionManagerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration", ProxyTransactionManagementConfiguration__TestContext001_BeanDefinitions.getProxyTransactionManagementConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.transaction.config.internalTransactionAdvisor", ProxyTransactionManagementConfiguration__TestContext001_BeanDefinitions.getInternalTransactionAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("transactionAttributeSource", ProxyTransactionManagementConfiguration__TestContext001_BeanDefinitions.getTransactionAttributeSourceBeanDefinition());
    beanFactory.registerBeanDefinition("transactionInterceptor", ProxyTransactionManagementConfiguration__TestContext001_BeanDefinitions.getTransactionInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.transaction.config.internalTransactionalEventListenerFactory", AbstractTransactionManagementConfiguration__TestContext001_BeanDefinitions.getInternalTransactionalEventListenerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration", TransactionAutoConfiguration__TestContext001_BeanDefinitions.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration.getCglibAutoProxyConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration", TransactionAutoConfiguration__TestContext001_BeanDefinitions.EnableTransactionManagementConfiguration.getEnableTransactionManagementConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration", TransactionAutoConfiguration__TestContext001_BeanDefinitions.TransactionTemplateConfiguration.getTransactionTemplateConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("transactionTemplate", TransactionAutoConfiguration__TestContext001_BeanDefinitions.TransactionTemplateConfiguration.getTransactionTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration", TransactionAutoConfiguration__TestContext001_BeanDefinitions.getTransactionAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration", HttpEncodingAutoConfiguration__TestContext001_BeanDefinitions.getHttpEncodingAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("characterEncodingFilter", HttpEncodingAutoConfiguration__TestContext001_BeanDefinitions.getCharacterEncodingFilterBeanDefinition());
    beanFactory.registerBeanDefinition("localeCharsetMappingsCustomizer", HttpEncodingAutoConfiguration__TestContext001_BeanDefinitions.getLocaleCharsetMappingsCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration", MultipartAutoConfiguration__TestContext001_BeanDefinitions.getMultipartAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("multipartConfigElement", MultipartAutoConfiguration__TestContext001_BeanDefinitions.getMultipartConfigElementBeanDefinition());
    beanFactory.registerBeanDefinition("multipartResolver", MultipartAutoConfiguration__TestContext001_BeanDefinitions.getMultipartResolverBeanDefinition());
    beanFactory.registerBeanDefinition("spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties", MultipartProperties__TestContext001_BeanDefinitions.getMultipartPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.testcontainers.properties.TestcontainersPropertySourceAutoConfiguration", TestcontainersPropertySourceAutoConfiguration__TestContext001_BeanDefinitions.getTestcontainersPropertySourceAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dynamicPropertyRegistry", TestcontainersPropertySourceAutoConfiguration__TestContext001_BeanDefinitions.getDynamicPropertyRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration", ServletEndpointManagementContextConfiguration__TestContext001_BeanDefinitions.WebMvcServletEndpointManagementContextConfiguration.getWebMvcServletEndpointManagementContextConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("servletEndpointRegistrar", ServletEndpointManagementContextConfiguration__TestContext001_BeanDefinitions.WebMvcServletEndpointManagementContextConfiguration.getServletEndpointRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration", ServletEndpointManagementContextConfiguration__TestContext001_BeanDefinitions.getServletEndpointManagementContextConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("servletExposeExcludePropertyEndpointFilter", ServletEndpointManagementContextConfiguration__TestContext001_BeanDefinitions.getServletExposeExcludePropertyEndpointFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration", WebMvcEndpointManagementContextConfiguration__TestContext001_BeanDefinitions.getWebMvcEndpointManagementContextConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webEndpointServletHandlerMapping", WebMvcEndpointManagementContextConfiguration__TestContext001_BeanDefinitions.getWebEndpointServletHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("controllerEndpointHandlerMapping", WebMvcEndpointManagementContextConfiguration__TestContext001_BeanDefinitions.getControllerEndpointHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("endpointObjectMapperWebMvcConfigurer", WebMvcEndpointManagementContextConfiguration__TestContext001_BeanDefinitions.getEndpointObjectMapperWebMvcConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties", CorsEndpointProperties__TestContext001_BeanDefinitions.getCorsEndpointPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration$MvcRequestMatcherConfiguration", SecurityRequestMatchersManagementContextConfiguration__TestContext001_BeanDefinitions.MvcRequestMatcherConfiguration.getMvcRequestMatcherConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("requestMatcherProvider", SecurityRequestMatchersManagementContextConfiguration__TestContext001_BeanDefinitions.MvcRequestMatcherConfiguration.getRequestMatcherProviderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration", SecurityRequestMatchersManagementContextConfiguration__TestContext001_BeanDefinitions.getSecurityRequestMatchersManagementContextConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration", ManagementContextAutoConfiguration__TestContext001_BeanDefinitions.SameManagementContextConfiguration.EnableSameManagementContextConfiguration.getEnableSameManagementContextConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration", ManagementContextAutoConfiguration__TestContext001_BeanDefinitions.SameManagementContextConfiguration.getSameManagementContextConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration", ManagementContextAutoConfiguration__TestContext001_BeanDefinitions.getManagementContextAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("management.server-org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties", ManagementServerProperties__TestContext001_BeanDefinitions.getManagementServerPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("mvcHandlerMappingIntrospectorRequestTransformer", HandlerMappingIntrospectorRequestTransformer__TestContext001_BeanDefinitions.getMvcHandlerMappingIntrospectorRequestTransformerBeanDefinition());
    beanFactory.registerBeanDefinition("springSecurityFilterChain", WebMvcSecurityConfiguration__TestContext001_BeanDefinitions.CompositeFilterChainProxy.getSpringSecurityFilterChainBeanDefinition());
    beanFactory.registerBeanDefinition("jpaSharedEM_AWC_entityManagerFactory", SharedEntityManagerCreator__TestContext001_BeanDefinitions.getJpaSharedEMAWCentityManagerFactoryBeanDefinition());
  }

  /**
   * Register the aliases.
   */
  public void registerAliases(DefaultListableBeanFactory beanFactory) {
    beanFactory.registerAlias("applicationTaskExecutor", "taskExecutor");
  }
}
